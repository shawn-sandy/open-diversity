{"version":3,"sources":["../node_modules/bulma/sass/utilities/animations.sass","style.scss","../node_modules/sass-rem/_rem.scss"],"names":[],"mappings":"AAAA,8BACE,KACE,+BAAA,AAAuB,sBAAA,CACzB,GACE,iCAAA,AAAyB,wBAAA,CAAA,CAJ7B,ACGC,sBDFC,KACE,+BAAA,AAAuB,sBAAA,CACzB,GACE,iCAAA,AAAyB,wBAAA,CAAA,CCD5B,0BADD,KAEE,cAAe,CAEhB,CAKD,KACC,eAAgB,CAChB,SAGA,cAAe,CACf,OAGA,qDACA,sBACA,4BACA,oBAAA,AAOA,iBAAA,yCACA,sBCG2D,CDV3D,0BALD,OAME,gBACA,iDACA,kCACA,eAAgB,CAIjB,CAED,SACC,cAAe,CACf,0BAED,gBAEE,iBCN0D,CDQ3D,CAED,aACC,sBCX2D,CDa3D,0BAHD,aAIE,eACD,CACA,CAAA","file":"../style.css","sourcesContent":["@keyframes spinAround {\n  from {\n    transform: rotate(0deg); }\n  to {\n    transform: rotate(359deg); } }\n","@import 'node_modules/bulma/sass/utilities/_all';\n@import 'node_modules/sass-rem/rem';\nhtml {\n\t@media (max-width: 767px) {\n\t\tfont-size: 14px;\n\t}\n}\nbody {\n\t//  padding: rem(20px)\n}\n\nmain {\n\tmin-height: 10vh;\n}\n\n.top-nav {\n\tpadding: 10px 0;\n}\n\n.cover {\n\tbackground-image: url('/static/img/diversity-bg.jpg');\n\tbackground-size: cover;\n\tbackground-repeat: no-repeat;\n\tobject-fit: cover;\n\t@media (max-width: 767px) {\n\t\tpadding: rem(20px);\n\t\tbackground-image: url('/static/img/mobie-bg.jpg');\n\t\tbackground-position: center center;\n\t\tborder-radius: 0;\n\t}\n\ttext-shadow: 2px 6px 8px rgba(0, 0, 0, 0.29);\n\tborder-radius: rem(15px);\n}\n\n.padding {\n\tpadding: 20px 0;\n}\n\n.mobile-padding {\n@media (max-width: 767px) {\n\t\tpadding: 0 rem(20px)\n\t}\n}\n\n.elm-rounded {\n\tborder-radius: rem(15px);\n\n\t@media (max-width: 767px) {\n\t\tborder-radius: 0\n\t}\n}\n","$rem-baseline: 16px !default;\n$rem-fallback: false !default;\n$rem-px-only: false !default;\n\n@function rem-separator($list, $separator: false) {\n  @if $separator == \"comma\" or $separator == \"space\" {\n    @return append($list, null, $separator);\n  } \n  \n  @if function-exists(\"list-separator\") == true {\n    @return list-separator($list);\n  }\n\n  // list-separator polyfill by Hugo Giraudel (https://sass-compatibility.github.io/#list_separator_function)\n  $test-list: ();\n  @each $item in $list {\n    $test-list: append($test-list, $item, space);\n  }\n\n  @return if($test-list == $list, space, comma);\n}\n\n@mixin rem-baseline($zoom: 100%) {\n  font-size: $zoom / 16px * $rem-baseline;\n}\n\n@function rem-convert($to, $values...) {\n  $result: ();\n  $separator: rem-separator($values);\n  \n  @each $value in $values {\n    @if type-of($value) == \"number\" and unit($value) == \"rem\" and $to == \"px\" {\n      $result: append($result, $value / 1rem * $rem-baseline, $separator);\n    } @else if type-of($value) == \"number\" and unit($value) == \"px\" and $to == \"rem\" {\n      $result: append($result, $value / $rem-baseline * 1rem, $separator);\n    } @else if type-of($value) == \"list\" {\n      $value-separator: rem-separator($value);\n      $value: rem-convert($to, $value...);\n      $value: rem-separator($value, $value-separator);\n      $result: append($result, $value, $separator);\n    } @else {\n      $result: append($result, $value, $separator);\n    }\n  }\n\n  @return if(length($result) == 1, nth($result, 1), $result);\n}\n\n@function rem($values...) {\n  @if $rem-px-only {\n    @return rem-convert(px, $values...);\n  } @else {\n    @return rem-convert(rem, $values...);\n  }\n}\n\n@mixin rem($properties, $values...) {\n  @if type-of($properties) == \"map\" {\n    @each $property in map-keys($properties) {\n      @include rem($property, map-get($properties, $property));\n    }\n  } @else {\n    @each $property in $properties {\n      @if $rem-fallback or $rem-px-only {\n        #{$property}: rem-convert(px, $values...);\n      }\n      @if not $rem-px-only {\n        #{$property}: rem-convert(rem, $values...);\n      }\n    }\n  }\n}\n"]}